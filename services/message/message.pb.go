// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/message.proto

package message

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSFMCMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey  string                 `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"` // for authentication
	UserId  string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message *MessageData           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Expdate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expdate,proto3" json:"expdate,omitempty"`
}

func (x *CreateSFMCMessageRequest) Reset() {
	*x = CreateSFMCMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSFMCMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSFMCMessageRequest) ProtoMessage() {}

func (x *CreateSFMCMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSFMCMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateSFMCMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSFMCMessageRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *CreateSFMCMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateSFMCMessageRequest) GetMessage() *MessageData {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CreateSFMCMessageRequest) GetExpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Expdate
	}
	return nil
}

type CreateMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey  string                 `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"` // for authentication
	ApiKey  string                 `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"` // for authentication
	UserId  string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message *MessageData           `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Expdate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expdate,proto3" json:"expdate,omitempty"`
}

func (x *CreateMessageRequest) Reset() {
	*x = CreateMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageRequest) ProtoMessage() {}

func (x *CreateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMessageRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *CreateMessageRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *CreateMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateMessageRequest) GetMessage() *MessageData {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CreateMessageRequest) GetExpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Expdate
	}
	return nil
}

type CreateMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey  string                 `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"` // for authentication
	ApiKey  string                 `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"` // for authentication
	UsersId []string               `protobuf:"bytes,3,rep,name=users_id,json=usersId,proto3" json:"users_id,omitempty"`
	Message *MessageData           `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Expdate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expdate,proto3" json:"expdate,omitempty"`
}

func (x *CreateMessagesRequest) Reset() {
	*x = CreateMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessagesRequest) ProtoMessage() {}

func (x *CreateMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessagesRequest.ProtoReflect.Descriptor instead.
func (*CreateMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMessagesRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *CreateMessagesRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *CreateMessagesRequest) GetUsersId() []string {
	if x != nil {
		return x.UsersId
	}
	return nil
}

func (x *CreateMessagesRequest) GetMessage() *MessageData {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CreateMessagesRequest) GetExpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Expdate
	}
	return nil
}

type ChangeMessagesStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey string   `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"` // for authentication
	UserId string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // make sure the request comming from the messages owner
	Ids    []string `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ChangeMessagesStateRequest) Reset() {
	*x = ChangeMessagesStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMessagesStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMessagesStateRequest) ProtoMessage() {}

func (x *ChangeMessagesStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMessagesStateRequest.ProtoReflect.Descriptor instead.
func (*ChangeMessagesStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{3}
}

func (x *ChangeMessagesStateRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *ChangeMessagesStateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChangeMessagesStateRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey    string `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MessageId string `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *DeleteMessageRequest) Reset() {
	*x = DeleteMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageRequest) ProtoMessage() {}

func (x *DeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteMessageRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *DeleteMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type MessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MessageReply) Reset() {
	*x = MessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReply) ProtoMessage() {}

func (x *MessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReply.ProtoReflect.Descriptor instead.
func (*MessageReply) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{5}
}

func (x *MessageReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body     string           `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Media    *MessageMedia    `protobuf:"bytes,3,opt,name=media,proto3" json:"media,omitempty"`
	Actions  []*MessageAction `protobuf:"bytes,4,rep,name=actions,proto3" json:"actions,omitempty"`
	Metadata string           `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *MessageData) Reset() {
	*x = MessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageData) ProtoMessage() {}

func (x *MessageData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageData.ProtoReflect.Descriptor instead.
func (*MessageData) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{6}
}

func (x *MessageData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MessageData) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MessageData) GetMedia() *MessageMedia {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *MessageData) GetActions() []*MessageAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *MessageData) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type MessageMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Thumbnail string `protobuf:"bytes,1,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Image     string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *MessageMedia) Reset() {
	*x = MessageMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageMedia) ProtoMessage() {}

func (x *MessageMedia) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageMedia.ProtoReflect.Descriptor instead.
func (*MessageMedia) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{7}
}

func (x *MessageMedia) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *MessageMedia) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type MessageAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MessageAction) Reset() {
	*x = MessageAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAction) ProtoMessage() {}

func (x *MessageAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAction.ProtoReflect.Descriptor instead.
func (*MessageAction) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{8}
}

func (x *MessageAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageAction) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SalesForcePush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Override         bool                          `protobuf:"varint,1,opt,name=Override,proto3" json:"Override,omitempty"`
	MessageText      string                        `protobuf:"bytes,2,opt,name=MessageText,proto3" json:"MessageText,omitempty"`
	Title            string                        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle         string                        `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	MutableContent   uint32                        `protobuf:"varint,5,opt,name=mutable_content,json=mutableContent,proto3" json:"mutable_content,omitempty"`
	SendTime         string                        `protobuf:"bytes,6,opt,name=SendTime,proto3" json:"SendTime,omitempty"`
	Sound            string                        `protobuf:"bytes,7,opt,name=Sound,proto3" json:"Sound,omitempty"`
	Badge            string                        `protobuf:"bytes,8,opt,name=Badge,proto3" json:"Badge,omitempty"`
	OpenDirect       string                        `protobuf:"bytes,9,opt,name=OpenDirect,proto3" json:"OpenDirect,omitempty"`
	CustomKeys       *SalesForcePush_Customkeys    `protobuf:"bytes,10,opt,name=CustomKeys,proto3" json:"CustomKeys,omitempty"`
	CustomPayload    *SalesForcePush_Custompayload `protobuf:"bytes,11,opt,name=CustomPayload,proto3" json:"CustomPayload,omitempty"`
	InclusionTags    []string                      `protobuf:"bytes,12,rep,name=inclusion_tags,json=inclusionTags,proto3" json:"inclusion_tags,omitempty"`
	ExclusionTags    []string                      `protobuf:"bytes,13,rep,name=exclusion_tags,json=exclusionTags,proto3" json:"exclusion_tags,omitempty"`
	InclusionListIds []string                      `protobuf:"bytes,14,rep,name=inclusion_list_ids,json=inclusionListIds,proto3" json:"inclusion_list_ids,omitempty"`
	ExclusionListIds []string                      `protobuf:"bytes,15,rep,name=exclusion_list_ids,json=exclusionListIds,proto3" json:"exclusion_list_ids,omitempty"`
}

func (x *SalesForcePush) Reset() {
	*x = SalesForcePush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesForcePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesForcePush) ProtoMessage() {}

func (x *SalesForcePush) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesForcePush.ProtoReflect.Descriptor instead.
func (*SalesForcePush) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{9}
}

func (x *SalesForcePush) GetOverride() bool {
	if x != nil {
		return x.Override
	}
	return false
}

func (x *SalesForcePush) GetMessageText() string {
	if x != nil {
		return x.MessageText
	}
	return ""
}

func (x *SalesForcePush) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SalesForcePush) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *SalesForcePush) GetMutableContent() uint32 {
	if x != nil {
		return x.MutableContent
	}
	return 0
}

func (x *SalesForcePush) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

func (x *SalesForcePush) GetSound() string {
	if x != nil {
		return x.Sound
	}
	return ""
}

func (x *SalesForcePush) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *SalesForcePush) GetOpenDirect() string {
	if x != nil {
		return x.OpenDirect
	}
	return ""
}

func (x *SalesForcePush) GetCustomKeys() *SalesForcePush_Customkeys {
	if x != nil {
		return x.CustomKeys
	}
	return nil
}

func (x *SalesForcePush) GetCustomPayload() *SalesForcePush_Custompayload {
	if x != nil {
		return x.CustomPayload
	}
	return nil
}

func (x *SalesForcePush) GetInclusionTags() []string {
	if x != nil {
		return x.InclusionTags
	}
	return nil
}

func (x *SalesForcePush) GetExclusionTags() []string {
	if x != nil {
		return x.ExclusionTags
	}
	return nil
}

func (x *SalesForcePush) GetInclusionListIds() []string {
	if x != nil {
		return x.InclusionListIds
	}
	return nil
}

func (x *SalesForcePush) GetExclusionListIds() []string {
	if x != nil {
		return x.ExclusionListIds
	}
	return nil
}

type SalesForcePush_Customkeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyA string `protobuf:"bytes,1,opt,name=keyA,proto3" json:"keyA,omitempty"`
	KeyB string `protobuf:"bytes,2,opt,name=keyB,proto3" json:"keyB,omitempty"`
}

func (x *SalesForcePush_Customkeys) Reset() {
	*x = SalesForcePush_Customkeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesForcePush_Customkeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesForcePush_Customkeys) ProtoMessage() {}

func (x *SalesForcePush_Customkeys) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesForcePush_Customkeys.ProtoReflect.Descriptor instead.
func (*SalesForcePush_Customkeys) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{9, 0}
}

func (x *SalesForcePush_Customkeys) GetKeyA() string {
	if x != nil {
		return x.KeyA
	}
	return ""
}

func (x *SalesForcePush_Customkeys) GetKeyB() string {
	if x != nil {
		return x.KeyB
	}
	return ""
}

type SalesForcePush_Custompayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomA string `protobuf:"bytes,1,opt,name=customA,proto3" json:"customA,omitempty"`
}

func (x *SalesForcePush_Custompayload) Reset() {
	*x = SalesForcePush_Custompayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesForcePush_Custompayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesForcePush_Custompayload) ProtoMessage() {}

func (x *SalesForcePush_Custompayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesForcePush_Custompayload.ProtoReflect.Descriptor instead.
func (*SalesForcePush_Custompayload) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{9, 1}
}

func (x *SalesForcePush_Custompayload) GetCustomA() string {
	if x != nil {
		return x.CustomA
	}
	return ""
}

var File_proto_message_proto protoreflect.FileDescriptor

var file_proto_message_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69,
	0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x01,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x46, 0x4d, 0x43, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x78,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x78, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x22, 0xd5, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b,
	0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72,
	0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x73, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62, 0x6f, 0x78,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a,
	0x07, 0x65, 0x78, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x78, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x60, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x67, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x26,
	0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x39, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x3e, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76,
	0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc9, 0x05, 0x0a, 0x0e, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x61, 0x64, 0x67, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70,
	0x65, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x50, 0x0a, 0x0a, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x63,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x6b, 0x65, 0x79, 0x73,
	0x52, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x59, 0x0a, 0x0d,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e,
	0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x73, 0x1a, 0x34, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x6b, 0x65, 0x79, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x41, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x42, 0x1a, 0x29, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x41, 0x32, 0xf5, 0x04, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x69,
	0x0a, 0x11, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x46, 0x4d, 0x43, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2f, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e,
	0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x46, 0x4d, 0x43, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69,
	0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x10, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x2e,
	0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x61, 0x73,
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x66, 0x0a, 0x11, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69,
	0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62,
	0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72,
	0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x66, 0x0a, 0x0c, 0x52, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x76, 0x61, 0x73,
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x66, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x31, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x62,
	0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72,
	0x69, 0x6e, 0x62, 0x6f, 0x78, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x12, 0x5a, 0x10, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_message_proto_rawDescOnce sync.Once
	file_proto_message_proto_rawDescData = file_proto_message_proto_rawDesc
)

func file_proto_message_proto_rawDescGZIP() []byte {
	file_proto_message_proto_rawDescOnce.Do(func() {
		file_proto_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_message_proto_rawDescData)
	})
	return file_proto_message_proto_rawDescData
}

var file_proto_message_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_message_proto_goTypes = []interface{}{
	(*CreateSFMCMessageRequest)(nil),     // 0: vascularinbox.message.CreateSFMCMessageRequest
	(*CreateMessageRequest)(nil),         // 1: vascularinbox.message.CreateMessageRequest
	(*CreateMessagesRequest)(nil),        // 2: vascularinbox.message.CreateMessagesRequest
	(*ChangeMessagesStateRequest)(nil),   // 3: vascularinbox.message.ChangeMessagesStateRequest
	(*DeleteMessageRequest)(nil),         // 4: vascularinbox.message.DeleteMessageRequest
	(*MessageReply)(nil),                 // 5: vascularinbox.message.MessageReply
	(*MessageData)(nil),                  // 6: vascularinbox.message.MessageData
	(*MessageMedia)(nil),                 // 7: vascularinbox.message.MessageMedia
	(*MessageAction)(nil),                // 8: vascularinbox.message.MessageAction
	(*SalesForcePush)(nil),               // 9: vascularinbox.message.SalesForcePush
	(*SalesForcePush_Customkeys)(nil),    // 10: vascularinbox.message.SalesForcePush.Customkeys
	(*SalesForcePush_Custompayload)(nil), // 11: vascularinbox.message.SalesForcePush.Custompayload
	(*timestamppb.Timestamp)(nil),        // 12: google.protobuf.Timestamp
}
var file_proto_message_proto_depIdxs = []int32{
	6,  // 0: vascularinbox.message.CreateSFMCMessageRequest.message:type_name -> vascularinbox.message.MessageData
	12, // 1: vascularinbox.message.CreateSFMCMessageRequest.expdate:type_name -> google.protobuf.Timestamp
	6,  // 2: vascularinbox.message.CreateMessageRequest.message:type_name -> vascularinbox.message.MessageData
	12, // 3: vascularinbox.message.CreateMessageRequest.expdate:type_name -> google.protobuf.Timestamp
	6,  // 4: vascularinbox.message.CreateMessagesRequest.message:type_name -> vascularinbox.message.MessageData
	12, // 5: vascularinbox.message.CreateMessagesRequest.expdate:type_name -> google.protobuf.Timestamp
	7,  // 6: vascularinbox.message.MessageData.media:type_name -> vascularinbox.message.MessageMedia
	8,  // 7: vascularinbox.message.MessageData.actions:type_name -> vascularinbox.message.MessageAction
	10, // 8: vascularinbox.message.SalesForcePush.CustomKeys:type_name -> vascularinbox.message.SalesForcePush.Customkeys
	11, // 9: vascularinbox.message.SalesForcePush.CustomPayload:type_name -> vascularinbox.message.SalesForcePush.Custompayload
	0,  // 10: vascularinbox.message.Message.HandleSFMCMessage:input_type -> vascularinbox.message.CreateSFMCMessageRequest
	1,  // 11: vascularinbox.message.Message.HandleAPIMessage:input_type -> vascularinbox.message.CreateMessageRequest
	2,  // 12: vascularinbox.message.Message.HandleAPIMessages:input_type -> vascularinbox.message.CreateMessagesRequest
	4,  // 13: vascularinbox.message.Message.DeleteMessage:input_type -> vascularinbox.message.DeleteMessageRequest
	3,  // 14: vascularinbox.message.Message.ReadMessages:input_type -> vascularinbox.message.ChangeMessagesStateRequest
	3,  // 15: vascularinbox.message.Message.OpenMessages:input_type -> vascularinbox.message.ChangeMessagesStateRequest
	5,  // 16: vascularinbox.message.Message.HandleSFMCMessage:output_type -> vascularinbox.message.MessageReply
	5,  // 17: vascularinbox.message.Message.HandleAPIMessage:output_type -> vascularinbox.message.MessageReply
	5,  // 18: vascularinbox.message.Message.HandleAPIMessages:output_type -> vascularinbox.message.MessageReply
	5,  // 19: vascularinbox.message.Message.DeleteMessage:output_type -> vascularinbox.message.MessageReply
	5,  // 20: vascularinbox.message.Message.ReadMessages:output_type -> vascularinbox.message.MessageReply
	5,  // 21: vascularinbox.message.Message.OpenMessages:output_type -> vascularinbox.message.MessageReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_message_proto_init() }
func file_proto_message_proto_init() {
	if File_proto_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSFMCMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMessagesStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesForcePush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesForcePush_Customkeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesForcePush_Custompayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_message_proto_goTypes,
		DependencyIndexes: file_proto_message_proto_depIdxs,
		MessageInfos:      file_proto_message_proto_msgTypes,
	}.Build()
	File_proto_message_proto = out.File
	file_proto_message_proto_rawDesc = nil
	file_proto_message_proto_goTypes = nil
	file_proto_message_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MessageClient is the client API for Message service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageClient interface {
	HandleSFMCMessage(ctx context.Context, in *CreateSFMCMessageRequest, opts ...grpc.CallOption) (*MessageReply, error)
	HandleAPIMessage(ctx context.Context, in *CreateMessageRequest, opts ...grpc.CallOption) (*MessageReply, error)
	HandleAPIMessages(ctx context.Context, in *CreateMessagesRequest, opts ...grpc.CallOption) (*MessageReply, error)
	DeleteMessage(ctx context.Context, in *DeleteMessageRequest, opts ...grpc.CallOption) (*MessageReply, error)
	ReadMessages(ctx context.Context, in *ChangeMessagesStateRequest, opts ...grpc.CallOption) (*MessageReply, error)
	OpenMessages(ctx context.Context, in *ChangeMessagesStateRequest, opts ...grpc.CallOption) (*MessageReply, error)
}

type messageClient struct {
	cc grpc.ClientConnInterface
}

func NewMessageClient(cc grpc.ClientConnInterface) MessageClient {
	return &messageClient{cc}
}

func (c *messageClient) HandleSFMCMessage(ctx context.Context, in *CreateSFMCMessageRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := c.cc.Invoke(ctx, "/vascularinbox.message.Message/HandleSFMCMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) HandleAPIMessage(ctx context.Context, in *CreateMessageRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := c.cc.Invoke(ctx, "/vascularinbox.message.Message/HandleAPIMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) HandleAPIMessages(ctx context.Context, in *CreateMessagesRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := c.cc.Invoke(ctx, "/vascularinbox.message.Message/HandleAPIMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) DeleteMessage(ctx context.Context, in *DeleteMessageRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := c.cc.Invoke(ctx, "/vascularinbox.message.Message/DeleteMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) ReadMessages(ctx context.Context, in *ChangeMessagesStateRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := c.cc.Invoke(ctx, "/vascularinbox.message.Message/ReadMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) OpenMessages(ctx context.Context, in *ChangeMessagesStateRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := c.cc.Invoke(ctx, "/vascularinbox.message.Message/OpenMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageServer is the server API for Message service.
type MessageServer interface {
	HandleSFMCMessage(context.Context, *CreateSFMCMessageRequest) (*MessageReply, error)
	HandleAPIMessage(context.Context, *CreateMessageRequest) (*MessageReply, error)
	HandleAPIMessages(context.Context, *CreateMessagesRequest) (*MessageReply, error)
	DeleteMessage(context.Context, *DeleteMessageRequest) (*MessageReply, error)
	ReadMessages(context.Context, *ChangeMessagesStateRequest) (*MessageReply, error)
	OpenMessages(context.Context, *ChangeMessagesStateRequest) (*MessageReply, error)
}

// UnimplementedMessageServer can be embedded to have forward compatible implementations.
type UnimplementedMessageServer struct {
}

func (*UnimplementedMessageServer) HandleSFMCMessage(context.Context, *CreateSFMCMessageRequest) (*MessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleSFMCMessage not implemented")
}
func (*UnimplementedMessageServer) HandleAPIMessage(context.Context, *CreateMessageRequest) (*MessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleAPIMessage not implemented")
}
func (*UnimplementedMessageServer) HandleAPIMessages(context.Context, *CreateMessagesRequest) (*MessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleAPIMessages not implemented")
}
func (*UnimplementedMessageServer) DeleteMessage(context.Context, *DeleteMessageRequest) (*MessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMessage not implemented")
}
func (*UnimplementedMessageServer) ReadMessages(context.Context, *ChangeMessagesStateRequest) (*MessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadMessages not implemented")
}
func (*UnimplementedMessageServer) OpenMessages(context.Context, *ChangeMessagesStateRequest) (*MessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenMessages not implemented")
}

func RegisterMessageServer(s *grpc.Server, srv MessageServer) {
	s.RegisterService(&_Message_serviceDesc, srv)
}

func _Message_HandleSFMCMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSFMCMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).HandleSFMCMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vascularinbox.message.Message/HandleSFMCMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).HandleSFMCMessage(ctx, req.(*CreateSFMCMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_HandleAPIMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).HandleAPIMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vascularinbox.message.Message/HandleAPIMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).HandleAPIMessage(ctx, req.(*CreateMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_HandleAPIMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).HandleAPIMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vascularinbox.message.Message/HandleAPIMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).HandleAPIMessages(ctx, req.(*CreateMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_DeleteMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).DeleteMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vascularinbox.message.Message/DeleteMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).DeleteMessage(ctx, req.(*DeleteMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_ReadMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeMessagesStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).ReadMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vascularinbox.message.Message/ReadMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).ReadMessages(ctx, req.(*ChangeMessagesStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_OpenMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeMessagesStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).OpenMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vascularinbox.message.Message/OpenMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).OpenMessages(ctx, req.(*ChangeMessagesStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Message_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vascularinbox.message.Message",
	HandlerType: (*MessageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleSFMCMessage",
			Handler:    _Message_HandleSFMCMessage_Handler,
		},
		{
			MethodName: "HandleAPIMessage",
			Handler:    _Message_HandleAPIMessage_Handler,
		},
		{
			MethodName: "HandleAPIMessages",
			Handler:    _Message_HandleAPIMessages_Handler,
		},
		{
			MethodName: "DeleteMessage",
			Handler:    _Message_DeleteMessage_Handler,
		},
		{
			MethodName: "ReadMessages",
			Handler:    _Message_ReadMessages_Handler,
		},
		{
			MethodName: "OpenMessages",
			Handler:    _Message_OpenMessages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/message.proto",
}
